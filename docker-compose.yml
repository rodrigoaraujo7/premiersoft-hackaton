version: '3.8'

services:
  postgres:
    image: postgres:15-alpine  # Usar imagem oficial ao invés de build
    container_name: postgres_db
    restart: unless-stopped

    environment:
      POSTGRES_DB: hackathon
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"

    ports:
      - "5432:5432"

    volumes:
      # Volume nomeado para persistir dados entre reinicializações
      - postgres_data:/var/lib/postgresql/data
      # Volume para scripts de inicialização (sempre atualizado)
      - ./migration:/docker-entrypoint-initdb.d:ro

    networks:
      - app_network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: backend_app
    restart: unless-stopped

    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/hackathon
      PORT: 3000

    ports:
      - "3000:3000"

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - app_network

  frontend:
    build: ./frontend
    container_name: frontend_app
    restart: unless-stopped

    ports:
      - "5173:5173"

    depends_on:
      - backend

    networks:
      - app_network

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge